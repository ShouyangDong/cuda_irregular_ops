extern "C" __mlu_global__ void add(float* lhs, float* rhs, float* add_2265) {
  __nram__ float lhs_local_nram[512];
  for (int i3_outer_i2_fused_i1_fused_i0_fused_outer_outer = 0; i3_outer_i2_fused_i1_fused_i0_fused_outer_outer < 500; ++i3_outer_i2_fused_i1_fused_i0_fused_outer_outer) {
    __memcpy(((float *)lhs_local_nram + (0)), ((float *)lhs + ((((i3_outer_i2_fused_i1_fused_i0_fused_outer_outer * 4096) + (((int)clusterId) * 1024)) + (((int)coreId) * 256)))), 1024, GDRAM2NRAM);
    __memcpy(((float *)lhs_local_nram + (256)), ((float *)rhs + ((((i3_outer_i2_fused_i1_fused_i0_fused_outer_outer * 4096) + (((int)clusterId) * 1024)) + (((int)coreId) * 256)))), 1024, GDRAM2NRAM);
    __bang_add(((float *)lhs_local_nram + (0)), ((float *)lhs_local_nram + (0)), ((float *)lhs_local_nram + (256)), 256);
    __memcpy(((float *)add_2265 + ((((i3_outer_i2_fused_i1_fused_i0_fused_outer_outer * 4096) + (((int)clusterId) * 1024)) + (((int)coreId) * 256)))), ((float *)lhs_local_nram + (0)), 1024, NRAM2GDRAM);
  }
}

extern "C" void add_kernel(float *C, float *A, float *B, int size) {
  cnrtQueue_t queue;
  cnrtSetDevice(0);
  cnrtQueueCreate(&queue);
  float *d_A, *d_B, *d_C;

  cnrtMalloc(&d_A, size * sizeof(float));
  cnrtMalloc(&d_B, size * sizeof(float));
  cnrtMalloc(&d_C, size * sizeof(float));

  cnrtMemcpy(d_A, A, size * sizeof(float), cnrtMemcpyHostToDevice);
  cnrtMemcpy(d_B, B, size * sizeof(float), cnrtMemcpyHostToDevice);

  cnrtDim3_t dim = {1, 4, 4};
  cnrtFunctionType_t ktype = CNRT_FUNC_TYPE_UNION4;

  add<<<dim, ktype, queue>>>(d_A, d_B, d_C);

  cnrtMemcpy(C, d_C, size * sizeof(float), cnrtMemcpyDeviceToHost);

  cnrtFree(d_A);
  cnrtFree(d_B);
  cnrtFree(d_C);
}